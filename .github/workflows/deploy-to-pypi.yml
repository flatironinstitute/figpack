name: deploy-to-pypi

on:
  workflow_dispatch:
  push:
    paths:
      - "figpack/__init__.py"
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
        zarr-version: ["zarr2", "zarr3"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: figpack-figure/package-lock.json

      - name: Install GUI dependencies and build
        run: |
          cd figpack-figure
          npm ci
          npm run build

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[test-${{ matrix.zarr-version }}]"

      - name: Run tests with pytest
        run: |
          if [ "${{ matrix.zarr-version }}" = "zarr3" ]; then
            pytest -m "not spikeinterface" --cov=figpack --cov-report=xml --cov-report=term-missing
          else
            pytest --cov=figpack --cov-report=xml --cov-report=term-missing
          fi

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: figpack-figure/package-lock.json

      - name: Install GUI dependencies and build
        run: |
          cd figpack-figure
          npm ci
          npm run build

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"
          pip install black

      - name: Check code formatting with black
        run: |
          black --check --diff figpack tests

  deploy:
    needs: [test, lint]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: figpack-figure/package-lock.json

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Install GUI dependencies
        run: |
          cd figpack-figure
          npm ci
          npm run build

      - name: Build package
        run: |
          python -m build

      - name: Install package locally
        run: |
          pip install .

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Extract version from installed package
        id: get_version
        run: |
          VERSION=$(python -c "import figpack; print(figpack.__version__)")
          echo "version=v$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${{ steps.get_version.outputs.version }} -m "Release ${{ steps.get_version.outputs.version }}"
          git push origin ${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            ## figpack ${{ steps.get_version.outputs.version }}
            
            This release has been automatically published to PyPI.
            
            ### Installation
            ```bash
            pip install figpack==${{ steps.get_version.outputs.version }}
            ```
            
            ### Documentation
            - [Documentation](https://flatironinstitute.github.io/figpack)
            - [PyPI Package](https://pypi.org/project/figpack/${{ steps.get_version.outputs.version }}/)
            
            See [CHANGELOG.md](https://github.com/flatironinstitute/figpack/blob/main/CHANGELOG.md) for details about changes in this release.
          draft: false
          prerelease: false
